import{_ as e,o as l,c as a,aT as d}from"./chunks/framework.CEx7kJFh.js";const h=JSON.parse('{"title":"StLoginPage1 组件","description":"","frontmatter":{},"headers":[],"relativePath":"ui-vue3/login-page-1/index.md","filePath":"ui-vue3/login-page-1/index.md"}'),n={name:"ui-vue3/login-page-1/index.md"};function r(i,t,o,s,c,g){return l(),a("div",null,t[0]||(t[0]=[d('<h1 id="stloginpage1-组件" tabindex="-1">StLoginPage1 组件 <a class="header-anchor" href="#stloginpage1-组件" aria-label="Permalink to &quot;StLoginPage1 组件&quot;">​</a></h1><p>登录页面组件 1</p><div class="info custom-block"><p class="custom-block-title">组件样式来源</p><p><a href="https://www.bilibili.com/video/BV1XA4y1D7DC/" target="_blank" rel="noreferrer">https://www.bilibili.com/video/BV1XA4y1D7DC/</a></p></div><div class="tip custom-block"><p class="custom-block-title">组件源码地址</p><p><a href="https://gitee.com/tongchaowei/small-tail-admin/tree/dev/front-end/monorepo-vite-vue3-ts/small-tail-common/ui-vue3/src/components/StLoginPage1" target="_blank" rel="noreferrer">https://gitee.com/tongchaowei/small-tail-admin/tree/dev/front-end/monorepo-vite-vue3-ts/small-tail-common/ui-vue3/src/components/StLoginPage1</a></p></div><h2 id="组件参数" tabindex="-1">组件参数 <a class="header-anchor" href="#组件参数" aria-label="Permalink to &quot;组件参数&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数名</th><th style="text-align:left;">说明</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th></tr></thead><tbody><tr><td>pageMinHeight</td><td style="text-align:left;">页面最小高度，当浏览器屏幕的宽度小于 875px 时起作用，当传入的值为数字类型时，单位默认为 px</td><td style="text-align:center;"><code>number | string</code></td><td style="text-align:center;">850px</td></tr><tr><td>circleMaskDiameter</td><td style="text-align:left;">圆形遮罩的直径，就是表单切换时会移动覆盖掉要切换掉的表单的元素，当传入的值为数字类型时，单位默认为 px</td><td style="text-align:center;"><code>number | string</code></td><td style="text-align:center;">2500px</td></tr><tr><td>circleMaskDiameterSmall</td><td style="text-align:left;">圆形遮罩在小屏幕下的直径，即当浏览器屏幕的宽度小于 875px 时，会使用这个值作为圆形遮罩的直径，当传入的值为数字类型时，单位默认为 px</td><td style="text-align:center;"><code>number | string</code></td><td style="text-align:center;">1500px</td></tr><tr><td>circleMaskColor</td><td style="text-align:left;">圆形遮罩的颜色</td><td style="text-align:center;">string</td><td style="text-align:center;">#368EEF</td></tr><tr><td>panelImgSrc</td><td style="text-align:left;">面板中展示的图片的资源地址，这里的面板指定是登录页面中表单的左边或右边那半部分用于展示图片和切换表单按钮与文本的区域。<br>如果传递的参数值为数组类型，则第一张图片会在面板 1 中展示，第二张图片会在面板 2 中展示，如果只有一张图片，则面板 1 与面板 2 展示相同的图片；如果传递的参数值为字符串类型，则面板 1 与面板 2 展示相同的图片。</td><td style="text-align:center;"><code>string | string[]</code></td><td style="text-align:center;">&#39;&#39;</td></tr><tr><td>panelImgWidthSmall</td><td style="text-align:left;">面板中展示的图片在小屏幕下的宽度，当浏览器屏幕的宽度小于 875px 时起作用，当传入的值为数字类型时，单位默认为 px</td><td style="text-align:center;"><code>number | string</code></td><td style="text-align:center;">200px</td></tr></tbody></table><h2 id="组件双向数据绑定" tabindex="-1">组件双向数据绑定 <a class="header-anchor" href="#组件双向数据绑定" aria-label="Permalink to &quot;组件双向数据绑定&quot;">​</a></h2><table tabindex="0"><thead><tr><th>参数名</th><th style="text-align:left;">说明</th><th style="text-align:center;">类型</th><th style="text-align:center;">默认值</th></tr></thead><tbody><tr><td>isToggleForm</td><td style="text-align:left;">是否切换为第二个表单，即当该值为 true 时，会切换展示第二个表单；否则，当该值为 false 时，会切换展示第一个表单</td><td style="text-align:center;">boolean</td><td style="text-align:center;">false</td></tr></tbody></table><h2 id="组件插槽" tabindex="-1">组件插槽 <a class="header-anchor" href="#组件插槽" aria-label="Permalink to &quot;组件插槽&quot;">​</a></h2><table tabindex="0"><thead><tr><th>插槽名</th><th style="text-align:left;">说明</th></tr></thead><tbody><tr><td>form-1</td><td style="text-align:left;">第一个表单的内容</td></tr><tr><td>panel-1</td><td style="text-align:left;">与第一个表单同时展示的面板的内容</td></tr><tr><td>panel-1-top</td><td style="text-align:left;">与第一个表单同时展示的面板的顶部区域的内容</td></tr><tr><td>form-2</td><td style="text-align:left;">第二个表单的内容</td></tr><tr><td>panel-2</td><td style="text-align:left;">与第二个表单同时展示的面板的内容</td></tr><tr><td>panel-2-top</td><td style="text-align:left;">与第二个表单同时展示的面板的顶部区域的内容</td></tr></tbody></table>',10)]))}const p=e(n,[["render",r]]);export{h as __pageData,p as default};
